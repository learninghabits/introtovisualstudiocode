{
  "_args": [
    [
      {
        "raw": "gulp-ember-handlebars@^0.7.0",
        "scope": null,
        "escapedName": "gulp-ember-handlebars",
        "name": "gulp-ember-handlebars",
        "rawSpec": "^0.7.0",
        "spec": ">=0.7.0 <0.8.0",
        "type": "range"
      },
      "C:\\vscode"
    ]
  ],
  "_from": "gulp-ember-handlebars@>=0.7.0 <0.8.0",
  "_id": "gulp-ember-handlebars@0.7.0",
  "_inCache": true,
  "_location": "/gulp-ember-handlebars",
  "_nodeVersion": "0.10.33",
  "_npmUser": {
    "name": "jonbuffington",
    "email": "jon@fuseelements.com"
  },
  "_npmVersion": "2.1.5",
  "_phantomChildren": {},
  "_requested": {
    "raw": "gulp-ember-handlebars@^0.7.0",
    "scope": null,
    "escapedName": "gulp-ember-handlebars",
    "name": "gulp-ember-handlebars",
    "rawSpec": "^0.7.0",
    "spec": ">=0.7.0 <0.8.0",
    "type": "range"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "http://registry.npmjs.org/gulp-ember-handlebars/-/gulp-ember-handlebars-0.7.0.tgz",
  "_shasum": "52bd7c2c5ceb5294620c7af64b50e798bfa9ada2",
  "_shrinkwrap": null,
  "_spec": "gulp-ember-handlebars@^0.7.0",
  "_where": "C:\\vscode",
  "author": {
    "name": "Fuse Elements",
    "email": "contact@fuseelements.com",
    "url": "http://fuseelements.com/"
  },
  "bugs": {
    "url": "https://github.com/fuseelements/gulp-ember-handlebars/issues"
  },
  "dependencies": {
    "ember-template-compiler": "~1.7.0",
    "handlebars": "~1.3.0"
  },
  "description": "Ember Handlebars plugin for gulp",
  "devDependencies": {
    "gulp-util": "~2.2.12",
    "mocha": "*",
    "should": "*"
  },
  "directories": {},
  "dist": {
    "shasum": "52bd7c2c5ceb5294620c7af64b50e798bfa9ada2",
    "tarball": "https://registry.npmjs.org/gulp-ember-handlebars/-/gulp-ember-handlebars-0.7.0.tgz"
  },
  "engines": {
    "node": "0.10"
  },
  "gitHead": "2e937578f86550df1fedf7bb2244cace3d71cf12",
  "homepage": "http://github.com/fuseelements/gulp-ember-handlebars",
  "keywords": [
    "gulpplugin",
    "handlebars",
    "ember"
  ],
  "licenses": [
    {
      "type": "MIT",
      "url": "http://github.com/fuseelements/gulp-ember-handlebars/raw/master/LICENSE"
    }
  ],
  "main": "index.js",
  "maintainers": [
    {
      "name": "jonbuffington",
      "email": "jon@fuseelements.com"
    }
  ],
  "name": "gulp-ember-handlebars",
  "optionalDependencies": {},
  "readme": "# gulp-ember-handlebars [![NPM version][npm-image]][npm-url] [![Build status][travis-image]][travis-url]\n> Ember Handlebars plugin for gulp 3.\n\n## Deprecation Notice\n\nThis plugin is no longer maintained. You should consider replacing your usage with [gulp-handlebars](https://github.com/lazd/gulp-handlebars). Starting with gulp-handlebars 2.2.0,\nembers-handlebars is supported.\n\n## Usage\n\nFirst, install `gulp-ember-handlebars` as a development dependency:\n\n```shell\nnpm install --save-dev gulp-ember-handlebars\n```\n\nThen, use the plugin in your `gulpfile.js`:\n\n```javascript\nvar handlebars = require('gulp-ember-handlebars');\n\ngulp.task('templates', function(){\n  gulp.src(['app/templates/*.hbs'])\n    .pipe(handlebars({\n      outputType: 'amd'\n     }))\n    .pipe(concat('templates.js'))\n    .pipe(gulp.dest('build/js/'));\n});\n```\n\n## API\n\n#### options.outputType\nType: `String`\nDefault: `amd`\n\nThe desired output type. One of the following:\n\n* `browser` - Produce plain JavaScript files for the browser.\n* `amd` - Produce AMD modules.\n* `cjs` - Produce CommonJS modules.\n\n### options.templateRoot\nType: `String`\nDefault: `templates`\n\nThis option specifies the name of the root directory for template files.\n\n### options.namespace\nType: `String`\nDefault: `Ember.TEMPLATES`\n\nThis option is only necessary when `options.outputType` is `browser`. This\noption's value is the namespace that is assigned the pre-compiled templates.\nUse dot notation (e.g. 'Ember.Templates`) for nested namespaces.\n\n### options.processName\nType: `Function`\nDefault: Strip file extension\n\nThis option accepts a function which takes one argument (the template name)\nand returns a string which will be used as the key for the precompiled\ntemplate object. By default, the filename minus the extension is used.\n\n### options.compilerOptions\nType: `Object`\n\nCompiler options to pass to `Ember.Handlebars.precompile()`.\n\n\n[travis-url]: http://travis-ci.org/fuseelements/gulp-ember-handlebars\n[travis-image]: https://secure.travis-ci.org/fuseelements/gulp-ember-handlebars.png?branch=master\n[npm-url]: https://npmjs.org/package/gulp-ember-handlebars\n[npm-image]: https://badge.fury.io/gh/fuseelements%2Fgulp-ember-handlebars.png\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/fuseelements/gulp-ember-handlebars.git"
  },
  "scripts": {
    "test": "mocha"
  },
  "version": "0.7.0",
  "warnings": [
    {
      "code": "ENOTSUP",
      "required": {
        "node": "0.10"
      },
      "pkgid": "gulp-ember-handlebars@0.7.0"
    }
  ]
}
